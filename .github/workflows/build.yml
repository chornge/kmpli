name: Build

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: macos-13
            arch: x64
            target: MacosX64

          - os: ubuntu-latest
            arch: x64
            target: LinuxX64

          - os: windows-latest
            arch: x64
            target: MingwX64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: JDK-17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Kotlin/Native
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Mac Dependencies
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install openssl curl

      - name: Linux Dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            build-essential \
            pkg-config

      - name: Windows Dependencies
        if: startsWith(matrix.os, 'windows')
        shell: pwsh
        run: |
          choco install -y curl openssl.light
          # Optional fallback for missing packages (ignore failures)
          try { choco install -y winlibs } catch { Write-Host "winlibs not found, continuing..." }

      - name: Build
        shell: bash
        run: |
          chmod +x gradlew
          ./gradlew clean linkReleaseExecutable${{ matrix.target }}

      - name: Test
        shell: bash
        run: |
          ./gradlew allTests
